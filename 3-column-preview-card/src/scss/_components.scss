@use 'base';
@use 'mixins';
// Buttons
.button {
	& {
		padding: 1em 2em;
		display: inline-block;
		position: relative;
		z-index: 1;
		overflow: hidden;
		border-radius: 1in;
		text-decoration: none;
	}

	&::after {
		content: "";
		position: absolute;
		z-index: -1;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		height: 100%;
		background-color: base.$color-gray;
		transform: translate3d(0, 0, 0);
		transition: transform 0.3s;
	}

	&:hover {
		@include mixins.transition();
		color: base.$color-gray !important;
		box-shadow: 0 0 0 2px base.$color-gray;
	}

	&:hover::after {
		@include mixins.transition();
		transform: translate3d(150%, 0, 0);
	}
}

// Columns

.column {
	padding: 3em;

	&:first-child {
		background-color: base.$color-orange;
		.button {
			color: base.$color-orange;
		}
	}

	&:nth-child(2) {
		background-color: base.$color-cyan;
		.button {
			color: base.$color-cyan;
		}
	}

	&:last-child {
		background-color: base.$color-dark;
		.button {
			color: base.$color-dark;
		}
	}
}
@media only screen and (max-width: 51em) {
	.column {
		&:first-child {
			border-top-left-radius: base.$border-radius;
			border-top-right-radius: base.$border-radius;
		}

		&:last-child {
			border-bottom-left-radius: base.$border-radius;
			border-bottom-right-radius: base.$border-radius;
		}
	}
}

@media only screen and (min-width: 52em) {
	.column {
		& {
			flex: 1;
			flex-basis: 0;
		}
		&:first-child {
			border-top-left-radius: base.$border-radius;
			border-bottom-left-radius: base.$border-radius;
		}

		&:last-child {
			border-top-right-radius: base.$border-radius;
			border-bottom-right-radius: base.$border-radius;
		}
	}
}
